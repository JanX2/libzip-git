.TH "ZIP_FILE_GET_EXTERNAL_ATTRIBUTES" "3" "September 19, 2013" "NiH" "Library Functions Manual"
.nh
.if n .ad l
.SH "NAME"
\fBzip_file_get_external_attributes\fR
\- get external attributes for file in zip
.SH "LIBRARY"
libzip (-lzip)
.SH "SYNOPSIS"
\fB#include <zip.h>\fR
.sp
\fIconst\ char\ *\fR
.br
\fBzip_file_get_external_attributes\fR(\fIstruct zip *archive\fR,\ \fIzip_uint64_t index\fR,\ \fIzip_flags_t flags\fR,\ \fIzip_uint8_t *opsys\fR,\ \fIzip_uint32_t *attributes\fR);
.SH "DESCRIPTION"
The
\fBzip_file_get_external_attributes\fR()
function returns the operating system and external attributes for the
file at position
\fIindex\fR
in the zip archive.
The external attributes usually contain the operating system-specific
file permissions.
If
\fIflags\fR
is set to
\fRZIP_FL_UNCHANGED\fR,
the original unchanged values are returned.
If
\fIopsys\fR
or
\fIattributes\fR
are
\fRNULL\fR,
they are not filled in.
.PP
The following operating systems are defined by the zip specification:
.RS 6n
.PD 0
.PP
ZIP_OPSYS_ACORN_RISC
.PP
ZIP_OPSYS_ALTERNATE_MVS
.PP
ZIP_OPSYS_AMIGA
.PP
ZIP_OPSYS_ATARI_ST
.PP
ZIP_OPSYS_BEOS
.PP
ZIP_OPSYS_CPM
.PP
ZIP_OPSYS_DOS
.PP
ZIP_OPSYS_MACINTOSH
.PP
ZIP_OPSYS_MVS
.PP
ZIP_OPSYS_OPENVMS
.PP
ZIP_OPSYS_OS_2
.PP
ZIP_OPSYS_OS_400
.PP
ZIP_OPSYS_OS_X
.PP
ZIP_OPSYS_TANDEM
.PP
ZIP_OPSYS_UNIX
.PP
ZIP_OPSYS_VFAT
.PP
ZIP_OPSYS_VM_CMS
.PP
ZIP_OPSYS_VSE
.PP
ZIP_OPSYS_WINDOWS_NTFS
.PP
ZIP_OPSYS_Z_SYSTEM
.RE
.PD
.SH "RETURN VALUES"
Upon successful completion, 0 is returned.
In case of an error,
\fR\-1\fR
is returned and the error code in
\fIarchive\fR
is set to indicate the error.
.SH "ERRORS"
\fBzip_file_get_external_attributes\fR()
fails if:
.TP 19n
[\fRZIP_ER_INVAL\fR]
\fIindex\fR
is not a valid file index in
\fIarchive\fR.
.SH "SEE ALSO"
libzip(3),
zip_file_set_external_attributes(3)
.SH "EXAMPLES"
The following code can be used to expand
\fIattributes\fR
if the operating system is
\fRZIP_OPSYS_DOS\fR.
.nf
.sp
.RS 0n
#include <sys/stat.h>

#define FA_RDONLY       0x01            // FILE_ATTRIBUTE_READONLY
#define FA_DIREC        0x10            // FILE_ATTRIBUTE_DIRECTORY

static mode_t
_zip_dos_attr2mode(zip_uint32_t attr)
{
   mode_t m = S_IRUSR | S_IRGRP | S_IROTH;
   if (0 == (attr & FA_RDONLY))
      m |= S_IWUSR | S_IWGRP | S_IWOTH;

   if (attr & FA_DIREC)
      m = (S_IFDIR | (m & ~S_IFMT)) | S_IXUSR | S_IXGRP | S_IXOTH;

   return m;
}
.RE
.fi
.SH "AUTHORS"
Dieter Baron <\fIdillo@nih.at\fR>
and
Thomas Klausner <\fItk@giga.or.at\fR>
